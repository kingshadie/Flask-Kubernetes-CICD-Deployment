name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Log in to GHCR
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    # Step 3: Build Docker Image
    - name: Build Docker Image
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/flask-app:latest .

    # Step 4: Push Docker Image
    - name: Push Docker Image
      run: |
        docker push ghcr.io/${{ github.repository_owner }}/flask-app:latest

    # Step 5: Set up kubectl
    - name: Set up KUBECONFIG for kubectl
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 --decode > ~/.kube/config
        kubectl config use-context kind-kind  # Make sure this context exists

    # Step 6: Handle Ngrok Certificate
    - name: Configure Ngrok Certificate
      run: |
        mkdir -p ./certs
        echo "${{ secrets.NGROK_CERT_PEM }}" > ./certs/ngrok-cert.pem
        export KUBECONFIG_CERT="./certs/ngrok-cert.pem"

    # Step 7: Deploy to Kubernetes
    - name: Deploy to Kubernetes
      env:
        KUBERNETES_SERVER: https://37da-2c0f-2a80-cb-ff10-c986-6bae-1f5e-34c.ngrok-free.app
      run: |
        kubectl config set-cluster kind-kind --server=$KUBERNETES_SERVER --certificate-authority=./certs/ngrok-cert.pem
        kubectl set image deployment/flask-app-deployment simple-webapp-flask=ghcr.io/${{ github.repository_owner }}/flask-app:latest
        kubectl rollout status deployment/flask-app-deployment
